stages:
  - build
  - deploy staging
  - approve production
  - deploy production

.assume_role: &assume_role
  - >
    STS=($(aws sts assume-role-with-web-identity
    --role-arn ${ROLE_ARN}
    --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}"
    --web-identity-token $ID_TOKEN
    --duration-seconds 3600
    --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]'
    --output text))
  - export AWS_ACCESS_KEY_ID="${STS[0]}"
  - export AWS_SECRET_ACCESS_KEY="${STS[1]}"
  - export AWS_SESSION_TOKEN="${STS[2]}"

build:
    stage: build
    image: node:latest
    script:
        - npm install
        - npm run build
    artifacts:
        paths:
        - build/
    only:
      - develop
      - main
    cache:
      paths:
        - node_modules/
        - build/

deploy staging:
    stage: deploy staging
    image:
        name: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
        entrypoint:
          - '/usr/bin/env'
    dependencies:
        - build
    id_tokens:
      ID_TOKEN:
        aud: our-identity-provider
    script:
        - *assume_role
        - aws s3 sync build/ s3://stag-$S3_BUCKET_NAME --delete
        - CLOUDFRONT_DOMAIN=$(aws cloudfront list-distributions --query "DistributionList.Items[?Origins.Items[0].DomainName=='stag-$S3_BUCKET_NAME.s3.amazonaws.com'].DomainName" --output text)
    environment:
        name: staging
        url: $CLOUDFRONT_DOMAIN
    only:
      - develop

approve production:
    stage: approve production
    script: echo "Waiting for manual approval..."
    when: manual
    only:
      - main

deploy production:
    stage: deploy production
    image:
      name: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
      entrypoint:
        - '/usr/bin/env'
    dependencies:
      - build
    id_tokens:
      ID_TOKEN:
        aud: our-identity-provider
    script:
      - *assume_role
      - aws s3 sync build/ s3://prod-$S3_BUCKET_NAME --delete
      - CLOUDFRONT_DOMAIN=$(aws cloudfront list-distributions --query "DistributionList.Items[?Origins.Items[0].DomainName=='prod-$S3_BUCKET_NAME.s3.amazonaws.com'].DomainName" --output text)
    environment:
      name: production
      url: $CLOUDFRONT_DOMAIN
    only:
      - main
    when: manual